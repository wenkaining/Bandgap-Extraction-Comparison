Journal Pre-proof Irvsp: To obtain irreducible representations of electronic states in the VASP Jiacheng Gao, Quansheng Wu, Clas Persson, Zhijun Wang PII: S0010-4655(20)30380-5 DOI: https://doi.org/10.1016/j.cpc.2020.107760 Reference: COMPHY 107760 To appear in: Computer Physics Communications Received date : 15 February 2020 Revised date : 29 November 2020 Accepted date : 3 December 2020 Please cite this article as: J. Gao, Q. Wu, C. Persson et al., Irvsp: To obtain irreducible representations of electronic states in the VASP, Computer Physics Communications (2020), doi: https://doi.org/10.1016/j.cpc.2020.107760.
This is a PDF file of an article that has undergone enhancements after acceptance, such as the addition of a cover page and metadata, and formatting for readability, but it is not yet the definitive version of record.
This version will undergo additional copyediting, typesetting and review before it is published in its final form, but we are providing this version to give early visibility of the article.
Please note that, during the production process, errors may be discovered which could affect the content, and all legal disclaimers that apply to the journal pertain.
© 2020 Elsevier B.V.
All rights reserved.
Irvsp: to obtain irreducible representations of electronic states in the VASP Jiacheng Gao,1, 2 Quansheng Wu,3, 4 Clas Persson,5, 6 and Zhijun Wang1, 2, ∗ 1Beijing National Laboratory for Condensed Matter Physics, and Institute of Physics, Chinese Academy of Sciences, Beijing 100190, China 2University of Chinese Academy of Sciences, Beijing 100049, China 3Institute of Physics, ´Ecole Polytechnique F´ed´erale de Lausanne, CH-1015 Lausanne, Switzerland 4National Centre for Computational Design and Discovery of Novel Materials MARVEL, Ecole Polytechnique F´ed´erale de Lausanne (EPFL), CH-1015 Lausanne, Switzerland 5Centre for Materials Science and Nanotechnology, Department of Physics, University of Oslo, P.O. Box 1048 Blindern, NO-0316 Oslo, Norway 6Department of Materials Science and Engineering, KTH Royal Institute of Technology, Stockholm, SE-100 44, Sweden We present an open-source program irvsp, to compute irreducible representations of electronic states for all 230 space groups with an interface to the Vienna ab-initio Simulation Package.
This code is fed with plane-wave-based wavefunctions (e.g. WAVECAR) and space group operators (listed in OUTCAR), which are generated by the VASP package.
This program computes the traces of matrix presentations and determines the corresponding irreducible representations for all energy bands and all the k-points in the three-dimensional Brillouin zone.
It also works with spin-orbit coupling (SOC), i.e., for double groups.
It is in particular useful to analyze energy bands, their connectivities, and band topology, after the establishment of the theory of topological quantum chemistry.
Accordingly, the associated library – irrep bcs.a – is developed, which can be easily linked to by other ab-initio packages.
In addition, the program has been extended to orthogonal tight-binding (TB) Hamiltonians, e.g. electronic or phononic TB Hamiltonians.
A sister program ir2tb is presented as well.
Program summary Program title: irvsp Program Files doi: tobeupdated Licensing provisions: GNU Lesser General Public License, https://www.gnu.org/licenses/ lgpl-3.0.html Distribution format: tar.gz Programming language: Fortran 90/77 Computer: Any architecture with a Fortran 90 complier RAM: 20 MB Nature of problem: Determining irreducible representations for all energy bands and all the k-points in 230 space groups.
It is in particular useful to analyze energy bands, their connectivities, and band topology.
Solution method: By computing the traces of matrix presentations of space group operators for the eigen-wavefunctions at a certain k-point in a given space group, one can determine irreducible representations for them.
Running time: It takes less than 1 minute for the calculation of Bismuth.
Keywords Irreducible representations; First-principles calculations; Nonsymmorphic space groups; Plane-wave basis; Tight-binding Hamiltonian; Topological materials I. INTRODUCTION Topological states have been intensively studied in the past decades [1–9].
During the period, lots of materials have theoretically been proposed to be topological insulators and topological semimetals, based on calculations within the density-functional theory (DFT) [10–16].
Many of them are veriﬁed in experiments, and substantially intrigue much interest in theories and experiments, such as three-dimensional (3D) topological insulator Bi2Se3 [17–19], Dirac semimetals Na3Bi [20, 21] and Cd3As2 [22, 23], Weyl semimetal TaAs [24–27], topological crystalline insulator SnTe [28, 29] and hourglass material KHgSb [30, 31] et al. To some extent, these topological electron bands are related to a ∗Electronic address: zjwang11@hotmail.com; The codes are available in the public repository: https://github.com/zjwang11/irvsp/. Manuscript  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  Journal Pre-proof Journal Pre-proof2 band-inversion feature.
Explicitly, there can be a band inversion between diﬀerent irreducible representations (IRs) of the little groups at k-points in the 3D Brillouin zone (BZ) [32].
In the situation of Dirac semimetals or nodal-line semimetals, the band inversion may happen on a high-symmetry line or in a high-symmetry plane.
Very recently, new insights about band theory have been used to classify all the nontrivial electron band topologies compatible with a given crystal structure [33–36].
In particular, based on the theory of topological quantum chemistry (TQC) [36–39], the topology of a set of isolated electron bands is relied on IRs at the maximal high-symmetry k-points (HSK), as the compatibility relations are obtained in Ref.
[40], and open accessible on the Bilbao Crystallographic Server (BCS) [41, 42].
The set of maximal HSK points can be found by using the BCS.
The determination of the IRs of electron bands at maximal HSK points is of great interest, for which the program – vasp2trace – was developed [12].
However, it is not suitable for any non-maximal HSK points.
Generally speaking, in order to obtain the IRs for electron energy bands in crystals, two ingredients are necessary: a) wave-functions (WFs) at k-points and b) character tables (CRTs) for k-little groups.
Diﬀerent versions of the codes can be developed based on the diﬀerent types of the WFs and conventions of the CRTs.
The program irrep in the WIEN2k package [43, 44] is a precursor in determining the IRs, which is based on the plane-wave (PW) basis (the part of the WFs outside muﬃn-tin spheres) and the CRTs of 32 point groups (PNGs).
There is an advantage of describing the IRs in terms of the more well-known PNG symmetries; however, the disadvantage is that in many cases k-points on the BZ surface cannot be classiﬁed with PNGs for nonsymmorphic crystals.
In this paper, the program – irvsp – is developed based on the CRTs on the BCS.
It originates from the WIEN2k irrep code [43, 44] that considers both single and double groups, analyses of time-reversal symmetry, and handles accidental degeneracies.
The present code inherits those features but it has been extended to also be able to determine IRs of those special k-points for nonsymmorphic crystals.
Hence, the code labels the IRs according to the convention of the BCS notation [42] for 230 space groups (SGs).
In fact, it works for 1651 magnetic space groups (MSGs), once the space group number of the unitary part of MSGs is correctly given.
In addition, Wannier-based tight-binding (TB) models are widely used to study the topological properties of real materials, including topological surface states and symmetry indicators.
To get the band representations and check the topology of these models, a sister program – ir2tb – is developed to interface with orthogonal TB Hamiltonians, e.g. electronic or phononic TB Hamiltonians.
This paper is organized as follows.
In Section II, we present some basic derivations to compute the traces of matrix presentations in diﬀerent bases.
In Section III, we introduce the general process of the code.
In Section IV, we introduce the capabilities of this package.
In Section V, we introduce the installation and basic usages.
In Section VI, we introduce some examples in order to show how to use irvsp to determine the IRs and further explore the topology. II.
METHODS Space-group operations (SGOs), Os = {Rs|vs}, are consist of two parts: a rotation part Rs and a translation part vs. The product of two operations is deﬁned as {Rs|vs}{Rt|vt} = {RsRt|Rsvt + vs}.
An operator acting on a scalar function in real space is expressed by Osf(r) = f(O−1 s r) = f(R−1 s r −R−1 s vs) (There is a typo in Section A of the supplementary information of Ref. [12]).
The matrix presentations (MPs), Omn s , can be computed in the basis of the Bloch wavefunctions |ψnk⟩: Omn s = ⟨ψmk|Os|ψnk⟩.
The traces of the obtained MPs are the characters, and they are essential to determine the corresponding IRs of the little group (LG) of k. The LG of k [LG(k)] is deﬁned as a set of SGOs: LG(k) : { Os|Rsk = k + G}, with G = lg1 + mg2 + ng3, l, m, n ∈N (1) Here, G could be any integer reciprocal lattice translation (g1, g2, g3 are primitive reciprocal lattice vectors).
The traces of MPs of SGOs are deﬁned as: Tr[Os] = X n Onn s with Onn s = ⟨ψnk|Os|ψnk⟩, Os ∈LG(k).
(2) Here, the WFs have to be normalized (i.e., ⟨ψnk|ψnk⟩= 1).
Under diﬀerent bases, the WFs can be expressed in diﬀerent ways, and the derivations of Eq. (2) are diﬀerent.
Here, we have derived the expressions in two bases: i) PW basis and ii) TB basis.
In what follows, symbols in the  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  Journal Pre-proof Journal Pre-proof3 bold text are vectors, and common braket notations are employed: ⟨r|A⟩≡A(r) ⟨A|B⟩≡ Z drA∗(r)B(r) ⟨r|k⟩≡eik·r To be convenient, we present the derivations in the cases without the spin degree of freedom.
However, the derivations can be easily extended to the cases including SOC, by substituting Rs ⊗SUs(2) for Rs, where the bases are doubled by the direct product: {PW/TB basis} ⊗{|↑⟩, |↓⟩}.
In fact, the code works for both single and double groups.
A. Plane-wave basis In the PW basis , wavefunctions/eigenstates are expressed in the basis of plane waves: ψnk(r) = X j Ck,jei(k+Gj)·r with ⟨k + Gi|k + Gj⟩= δij (3) The coeﬃcients (Ck,j) are usually computed in the ab-initio calculations and output by the DFT package (e.g. VASP, PWscf, etc.).
The SGOs acting on WFs are derived as: Osψnk(r) = X j Ck,jei(k+Gj)·(R−1 s r−R−1 s vs) = X j Ck,jeiRs(k+Gj)·(r−vs) = X j Ck,jei(k+Gj′)·(r−vs) with k + Gj′ ≡Rs(k + Gj) = e−ik·vs X j Ck,je−iGj′·vsei(k+Gj′)·r with Gj′ ≡Rs(k + Gj) −k Then, Eq. (2) can be written as: ⟨ψnk|Os|ψnk⟩= e−ik·vs X j C∗ k,j′Ck,je−iGj′·vs with Gj′ ≡Rs(k + Gj) −k (4) The program irvsp is developed based on the above derivations with the interface to VASP [45].
In addition, the library of the code is developed (see details in Appendix 6), which can be downloaded from the public code archive: https://github.com/zjwang11/irvsp/blob/master/lib_irrep_bcs.tar.gz.
The library – irrep bcs.a – can be easily linked to by other ab-initio packages, once a proper interface is made.
B. Orthogonal tight-binding basis In a TB Hamiltonian, WFs are expressed in the basis of exponentially localized orthogonal orbitals: |0, µα⟩≡ φµ α(r) ≡φα(r −τµ) and |Lj, µα⟩≡φα(r −Lj −τµ), where µ label the atoms, α label the orbitals, Lj label the lattice vectors in 3D crystals, and τµ label the positions of atoms in a home unit cell.
At a given k-point, WFs are given as: ψnk(r) = X µα Cn µα,kφµ αk(r) where n is a band index, (5) φµ αk(r) = X j φα(r −τµ −Lj)eik·(Lj+τµ), D φµ′ βk|φµ αk E = δµµ′δαβ (6) The states φµ αk(r) are the Fourier transformations of the local orbitals φµ α(r), as shown in Eq. (6).
The coeﬃcients are obtained as the eigenvectors of the TB Hamiltonian: Hµ′β,µα(k) = P j eik·(Lj+τµ−τµ′) D 0, µ′β| ˆH|Lj, µα E .
The  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  Journal Pre-proof Journal Pre-proof4 rotational symmetries Rs acting on the local orbitals [φα(r)] at the µ site are given as: d Rsφα(r) ≡Rsφα(r) = X β φβ(r)Ds,µ βα (7) These D-matrices are explicitly given in Table S3 in Appendix 2.
Under the basis of real spherical harmonic functions with diﬀerent total angular momenta (integer l), these D-matrices are real.
The SGOs acting on the states φµ αk(r) are given below: Osφµ αk(r) = φµ αk(R−1 s r −R−1 s vs) = X j φα(R−1 s r −R−1 s vs −τµ −Lj)eik·(Lj+τµ) = X j φα(R−1 s [r −vs −Rsτµ −RsLj])eik·(Lj+τµ) = X j d Rsφα[r −vs −Rsτµ −RsLj]ei(Rsk)·Rs(Lj+τµ) with d Rsφα(r) ≡ X β φβ(r)Ds,µ βα = e−i(Rsk·vs) X j d Rsφα[r −(vs + Rsτµ) −RsLj]ei(Rsk)·[RsLj+(Rsτµ+vs)] = e−i(Rsk·vs) X j d Rsφα[r −(τµ′ + Li 0) −RsLj]ei(Rsk)·[RsLj+(τµ′+Li 0)] using vs + Rsτµ = Li 0 + τµ′ = e−i(Rsk·vs) X j′ d Rsφα[r −τµ′ −Lj′]ei(Rsk)·[Lj′+τµ′] with Lj′ = Li 0 + RsLj = e−i(Rsk·vs) X β φµ′ β,Rsk(r)Ds,µ βα Thus, Eq. (2) is written as: ⟨ψnk|Os|ψnk⟩= e−i(Rsk·vs) X αµ,β (Cn µ′β)∗ei(Rsk−k)·τµ′Ds,µ βα Cn µα with vs + Rsτµ = Li 0 + τµ′ (8) In a matrix format, ⟨ψnk|Os|ψnk⟩= e−i(Rsk·vs) h C†V (Rsk −k)DC i nn (9) with V (k)µ′β,µα = eik·τµδµµ′δαβ, Cµα,n = Cn µα, Dµ′β,µα = ( Ds,µ βα when vs + Rsτµ = Li 0 + τµ′; 0 otherwise.
(10) Based on the above derivations, the code has been extended to the TB basis.
The sister program is called ir2tb.
To run ir2tb, users must provide two ﬁles: case hr.dat and tbbox.in.
The ﬁle called case hr.dat, containing the TB parameters, may be generated by the software Wannier90 [46, 47] with symmetrization [48–50], or generated by users with a toy TB model, or generated from Slater-Koster method [51] or discretization of k · p model onto a lattice [52].
The other ﬁle tbbox.in is the master input ﬁle for ir2tb.
It should be given consistently with the TB parameters in case hr.dat.
The tbbox.in for Bi2Se3 is given in Appendix 1.
In addition, the example of electronic TB Hamiltonian for Bi2Se3 and the example of phononic TB Hamiltonian for CoSi are included in the archive src ir2tb v2.tar.gz. III.
GENERAL PROCESS OF THE CODE In the main text, we are mainly focused on irvsp, which is based on the PW basis with an interface to the VASP package [45].
The key subroutines are summarized in Table I. One can check more details for ir2tb and irrep bcs.a in the Appendix.
The program ir2tb works for orthogonal TB Hamiltonians, e.g. the electronic or phononic TB Hamiltonians.
The library irrep bcs.a can be linked to by other DFT packages.
1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  Journal Pre-proof Journal Pre-proof5 TABLE I: A brief summary of key subroutines File Description Input wave data.f90 reading the coeﬃcients.
WAVECAR init.f90 reading lattice vectors and space group operators, and setting up the Z and Z−1 matrices.
OUTCAR kgroup.f90 determining the k-little groups.
nonsymm.f90 retrieving the character tables from the BCS chrct.f90 computing the traces through the Eq. (4), and determin- ing the IRs A. Wavefunctions at k-points In the VASP package, the all-electron wave-function is obtained by acting a linear operator T on the pseudo wave- function: |ψnk⟩= T  ˜ψnk E .
The linear operator can be written explicitly as: T = 1 + P i  |φi⟩− ˜φi E ⟨pi|, where |φi⟩( ˜φi E ) is a set of all-electron (pseudo) partial waves around each atom and |pi⟩is a set of corresponding projector functions on each atom within an augmentation region (r < R0), where R0 is the core part for each atom.
The pseudo-wavefunction is expanded in the plane waves: ˜ψnk(⃗r) ≡ D ⃗r| ˜ψnk E = X Gj Cn,k+Gjei(k+Gj)·⃗r (11) where Gj vectors are determined by the condition ℏ2 2me (k + Gj)2 < Ecutoff with a cutoﬀEcutoff.
It is worthy noting that  ˜ψnk E are suﬃcient for the calculations of the traces of MPs of SGOs.
Since the pseudo-wavefunctions  ˜ψnk E are usually not normalized, they have to be renormalized before their traces can be computed via Eq. (2).
The coeﬃcients (Ck+Gj) are output in WAVECAR by VASP.
In the program, they are read by the subroutine: wave data.f90.
In the SOC case, the Ck+Gj,↑and Ck+Gj,↓are stored in the complex variables coeffa(:) and coeffb(:).
In the case without SOC, the Ck+Gj are stored in coeffa(:), while coeffb(:) are invalid (set to be zero).
B. Space group operators of a 3D crystal Instead of generating space group operators from a 3D crystal structure (i.e., POSCAR), the program reads the SGOs directly from the standard output of VASP (i.e., OUTCAR), which is done by the subroutine: init.f90.
In other words, the SGOs are generated by the VASP package (e.g. with ISYM = 1 or 2 in INCAR for vasp.5.3.3), which are listed below the line of ‘Space group operators:’ in OUTCAR.
Fig. 1 shows an example of Bi2Se3 for the SGOs of space group (SG) 166.
They are given by Det (±1), ω, and ⃗n (nx, ny, nz) and v (v1t1,v2t2,v3t3) with t1, t2, t3 primitive lattice vectors.
The −1 value of Det indicates that the operator is a roto-inversion.
Actually, the listed SGOs depend on the lattice vectors.
Primitive lattice vectors (t1, t2, t3) and primitive reciprocal lattice vectors (g1, g2, g3) are read from OUTCAR, also shown in Fig. 2 for Bi2Se3.
It’s worth noting that to be compatible with the CRTs in the BCS, the POSCAR should be given in a standard way (see more details in Appendix 3).
The O(3) and SU(2) matrix presentations are generated in the spin-1 (under the basis of {x, y, z}) and spin-1/2 (under the basis of {↑, ↓}) spaces, respectively: R(ω,⃗n) = Det · e−iω(⃗n·⃗L), Lx =   0 0 0 0 0 −i 0 i 0  , Ly =   0 0 i 0 0 0 −i 0 0  , Lz =   0 −i 0 i 0 0 0 0 0  ; (12) S(ω,⃗n) = e−iω(⃗n·⃗S), Sx = σx 2 = 1 2  0 1 1 0  , Sy = σy 2 = 1 2  0 −i i 0  , Sz = σz 2 = 1 2  1 0 0 −1  .
(13) In 3D crystals, it is more convenient to use matrix presentations in the lattices of (t1, t2, t3) in real space and in  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  Journal Pre-proof Journal Pre-proof6 FIG.
1: Screenshot of OUTCAR, showing the space group operators of Bi2Se3 generated by VASP. FIG.
2: Screenshot of OUTCAR, showing the lattice vectors and reciprocal lattice vectors of Bi2Se3 which are used in VASP.
reciprocal lattices of (g1, g2, g3) in momentum space.
They are given in the following convention: ⃗v = t1v1 + t2v2 + t3v3 = (t1, t2, t3)   v1 v2 v3  , (t1, t2, t3) ≡   t1x t2x t3x t1y t2y t3y t1z t2z t3z  ; (14) ⃗k = k1g1 + k2g2 + k3g3 = (k1, k2, k3)   g1 g2 g3  ,   g1 g2 g3  ≡   g1x g1y g1z g2x g2y g2z g3x g3y g3z  . (15) with   g1 g2 g3  (t1, t2, t3) = 2πI3×3 The rotational symmetry operators acting on the vectors are transformed as: R⃗v = (t1, t2, t3)Z   v1 v2 v3  , R⃗k = (k1, k2, k3)Z−1   g1 g2 g3  ; (16) R(t1, t2, t3) = (t1, t2, t3)Z ⇒Z ≡(t1, t2, t3)−1R(t1, t2, t3) (17) Thus, rotational matrix presentations in the lattice vectors are 3×3 integer matrices (Z), which are deﬁned in Eq. (17).
Instead of the real R-matrices in Cartesian coordinates in Eq. (12), the integer matrices, Z and Z−1, are actually stored and used throughout the code, which are all set in the subroutine: init.f90.
If one wants to do some sub-space-group symmetry calculations, one can modify the SGOs in OUTCAR and give the correct space group number accordingly.
For example, if one only wants to know parity eigenvalues of the energy bands, one can change the list of SGOs with only two lines (i.e., identity and inversion symmetry) and give space group #2 to run irvsp.
C. Little group of a certain k-point The eigen-wavefunctions at a certain k-point only support the IRs of the little group of k, LG(k).
Therefore, for any given k-point, the program has to determine the k-little group LG(k) ﬁrst.
This is done in the subroutine: kgroup.f90.
The LG(k) are deﬁned by Eq. (1).
In the program, the integer matrices Z−1 and Eq. (16) in momentum space are used.
1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  Journal Pre-proof Journal Pre-proof7 D. Character tables for k-little groups Currently, there are two conventions of CRTs for k-little groups.
In the ﬁrst convention, the k points are labeled by the IRs of the PNGs, since IRs of the space group can be expressed as IRs of the corresponding point group multiplied by a phase factor.
They are suitable either for symmorphic SGs, or the inner k-points (not on the BZ boundary/surface) for the non-symmorphic SGs.
The CRTs of PNGs are given in the Ref.
[53, 54], which have been implemented in the program irrep of the WIEN2k package [43, 44].
In the second convention, all the CRTs for k-points of all 230 SGs are listed on the BCS [42].
Therefore, the program irvsp works for all k-points in 230 SGs.
The CRTs are retrieved from the inputs of the BCS, which are done by the subroutine: nonsymm.f90.
As an example, consider the Γ point of Bi2Se3.
Fig. 3 shows the CRT of the point group D3d in the PNG convention.
Fig. 4 shows the CRT in the BCS convention.
Both tables can be used to determine the IRs at Γ in SG 166.
In the table of Fig. 4, the ﬁrst and two columns show the reality and the BCS labels of IRs, respectively.
The following columns indicate the characters of diﬀerent SGOs.
The reality of an IR is given by the deﬁnition [53, 54]: 1 |G| P|G| j=1 χ(G2 j) =      1 potentially real , case (a) 0 essentially complex, case (b) −1 pseudo-real , case (c) (18) where Gj is an element of the group G, and |G| is the rank of the group G.
In a MSG, the group G is deﬁned as the unitary part of the MSG.
In case (a), the IR is equivalent to its complex representation, and also equivalent to a real representation.
In case (b), the IR is not equivalent to its complex representation.
In case (c), the IR is equivalent to its complex representation, but not to a real representation.
In the type-II MSGs, including pure time-reversal symmetry (TRS), the existence of anti-unitary SGOs in the k-little group is indicated at the beginning of the character table (Fig. 4).
In the absence of SOC (integer spin), TRS doubles the degeneracy of IRs in cases (b) and (c); while in the presence of SOC (half-integer spin), it doubles the degeneracy of the IRs in cases (a) and (b). FIG.
3: The character table of point group D3d, which is used to determine the IRs (i.e., PNG convention) for the energy bands at Γ of Bi2Se3 in irrep of the WIEN2k package. FIG.
4: The character table of Γ-little group in SG 166 on the BCS, which is used to determine the IRs (i.e., BCS convention) for the energy bands at Γ of Bi2Se3 in the program irvsp.
1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  Journal Pre-proof Journal Pre-proof8 E. Determination of irreducible representations After the normalization of the PW-based pseudo-wavefunctions in VASP, the traces of MPs of SGOs can be computed via Eq. (4), which are done in the subroutine chrct.f90.
By comparing the obtained traces and the characters of the CRTs, the IRs can be determined (see diﬀerent versions in Appendix 5). IV.
CAPABILITIES OF IRVSP In the study of the properties of a material, the determination of IRs of computed electron bands is of great interest to diagnose the band crossing/anti-crossing, degeneracy and band topology.
In the WIEN2k package, the program irrep classiﬁes the IRs in PNG symmetries, which then excludes the possibility to describe certain BZ surface k- points for nonsymmorphic crystals.
Therefore, the demand to determine the IRs for all the k-point in all 230 SGs is still unsatisﬁed.
With the CRTs from the BCS, the program – irvsp – is developed to meet this demand with the interface to the VASP package.
The associated library – irrep bcs.a – can be easily linked to by other ab-initio packages.
The obtained IRs are labeled in the convention of the BCS notation, which can be directly compared with the elementary band representations (EBRs) of the TQC theory, to further check the topology of a set of bands in materials.
V. INSTALLATION AND USAGE In this section, we will show how to install and use the irvsp software package.
This program is an open source free software package.
It is released on Github under the GNU Lesser General Public License, https://www.gnu. org/licenses/lgpl-3.0.html, and it can be downloaded directly from the public code archive: https://github. com/zjwang11/irvsp/blob/master/src_irvsp_v2.tar.gz.
To build and install irvsp, only a Fortran 90 compiler is needed.
The downloaded irvsp software package is likely a compressed ﬁle with a zip or tar.gz suﬃx.
One should uncompress it ﬁrst, then move into the src irvsp v2 folder.
After setting up the Fortran compiler in the Makefile ﬁle, the executable binary irvsp can be compiled by typing the following command in the current directory (src irvsp v2): $ ./ configure.sh $ source ~/. bashrc $ make Before running irvsp, the user must provide two consistent ﬁles: WAVECAR and OUTCAR.
The two ﬁles are generated by the VASP package in ﬁxed format.
It is designed to be simple and user friendly.
After a running of VASP with WAVECAR and OUTCAR output, the program irvsp can be run immediately.
Giving a correct space group number (sgn ∈[1, 230]) and a set of energy bands (from the mth band to the nth band), the program can be executed by the following command: $ irvsp -sg $sgn [-nb $m $n] > outir & VI.
EXAMPLES Very recently, the codes vasp2trace and CheckTopologicalMat have been designed for TQC in the Ref. [12].
However, they are not suitable for non-maximal HSK points.
In fact, vasp2trace is extracted from irvsp to interface with CheckTopologicalMat.
Here, we take topological materials PdSb2 and Bi as examples to show how to study topological properties of new materials with irvsp.
The necessary ﬁles for these materials are given as the examples in the archive src irvsp v2.tar.gz .
A. PdSb2 PdSb2 was predicted to be a candidate hosting sixfold-degenerate fermions because of nonsymmorphic symmetry [55, 56].
The crystal of PdSb2 is a cubic structure of SG 205.
We adopt the experimental lattice constant a [57–59] and fully relax the coordinates of inner atomic positions.
In the obtained band structure (BS) of Fig. 5(a) along the  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  Journal Pre-proof Journal Pre-proof9 Γ R X Γ R X (d) (e) (f) (a) (b) (c) -1 -0.5  0  0.5  1 Γ X M Γ R X|M R Energy (eV) Γ X M Γ R X|M R Γ X M Γ R X|M R -0.5 -0.45 -0.4 -0.35 -0.3 -0.25 -0.2 Energy (eV) P Q S4 S3 81,82 79,80 R11+R11 R10+R10 R5+R6 R11+R11 R10+R10 R5+R6 FIG.
5: Electronic band structures of PdSb2 without strain (a), with 0.31% (b) and 0.62% (c) tensile strains.
Panels (d-f) are the zoom-in plots of panels (a-c) near the R point.
In our calculations, the total number of electrons is 80.
The diﬀerent IRs at R are labeled by green triangles (R11+R11), orange squares (R10+R10) and purple circles (R5+R6).
The two crossing bands along R–X belong to S3 (yellow) and S4 (cyan), respectively.
P [0.4912 ( 2π a ), 0.5000 ( 2π a ), 0.4912 ( 2π a )] and Q [0.4722 ( 2π a ), 0.5000 ( 2π a ), 0.4722 ( 2π a )] are two points near the crossing point on the R–X line.
high-symmetry lines, we note that there is a tiny gap (∼10 meV) between two sixfold degeneracies at R. Then, we want to know the corresponding IRs of two sixfold degeneracies and how they are going to evolve under strains.
For this purpose, we performed the calculations with diﬀerent tensile strains (i.e., ∆a/a = 0.31% and ∆a/a = 0.62%).
Their electronic band structures are shown in Figs. 5 (b) and (c), respectively.
Comparing with the strain-free BS in Fig. 5(a), we ﬁnd that the overall BS doesn’t change very much, except for the R point.
The zoom-in plots around R are shown in lower panels of Fig. 5.
The R point is a k-point with nonsymmorphic symmetry in SG 205, where IRs of the space group can not be expressed as IRs of the corresponding point group multiplied by a phase factor.
By running irvsp, the IRs at R are obtained.
Figs. 6 (a-c) show the results of IRs for the low-energy bands.
The number of total electrons is 80 for PdSb2.
It is shown that the energy ordering of electron bands is changed at R under tiny strains.
The IRs at all the maximal HSK points can be computed directly by irvsp.
The trace ﬁle – trace.txt will be generated if only maximal HSK points are given in KPOINTS.
By directly comparing these obtained IRs with the EBRs of the TQC theory (released on the BCS) and solving the compatibility relations, we can ﬁnd that it is a topological insulating phase without strain, while it’s a symmetry-enforced semimetallic phase with tiny tensile strains.
To further obtain the crossing points in the system, we computed the IRs along the R–X line (named S [u, 0.5, u] in units of 2π a ).
These points are also non-symmorphic, which are on the boundary of the 3D BZ for SG 205.
The CRT for the S point is listed in Fig. S2.
For the P and Q points in Fig. 5(f) of the strained crystal, we show the results of obtained IRs in Fig. 7.
At the P point, the 79-80 degenerate bands are assigned to “S3+S3”, while 81-82 degenerate bands are assigned to “S4+S4”.
However, at the Q point, the results are in the opposite way.
Without doing further calculations with a denser kmesh between P and Q points, we can still conclude that it’s a real 4-fold crossing along R–X on the BZ boundary, which is robust against SOC.
The double degeneracy is due to the presence of TRS.
The symmetry #15 is the operator gy ≡{My|0 1 2 1 2}.
Therefore, the doubly-degenerate bands have the same gy eigenvalue ({S3, S3} or {S4, S4}), and the 4-fold crossing point along R–X is protected by gy symmetry.
As a result, the crossing 4-fold points actually form a Dirac nodal ring on the BZ boundary.
Considering the full symmetry of SG 205, we conclude that there are three Dirac nodal rings in PdSb2 with tiny strains, which can be further checked in experiments in the future.
1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  Journal Pre-proof Journal Pre-proof10 (a) (b) (c) FIG.
6: The IRs at R are determined by the program irvsp.
The CRT of the R-little group is shown in Fig. S1 in Appendix 4.
The ﬁrst three columns stand for the band indices, degeneracies, and the energies (without subtracting the Fermi energy EF ).
The following columns indicate the traces (characters) of the corresponding space group operators (listed as “E, 2, . . . , 24”).
The assigned IR labels are output to the right of the equality sign “=”.
The (a), (b), (c) panels are the obtained results for the three crystal structures, respectively. (a) (b) FIG.
7: The IRs are obtained by irvsp for P (a) and Q (b) as depicted in Fig. 5(f).
B. Bismuth As aforementioned, with the IRs at maximal HSK points obtained by irvsp, we can further check the topology by comparing them with the EBRs of the TQC theory.
Here, we will take Bi as an example to brieﬂy introduce the process.
The element Bismuth has the rhombohedral structure of SG 166.
The maximum HSK points of SG 166 are listed on the BCS, as Γ(GM), T, F, L. After performing the ab-initio calculations to obtain the eigen-wavefunctions at maximal HSK points, the obtained IRs of the occupied bands are given in Table II.
From the TQC and BCS, the TABLE II: The IRs at maximal HSK points obtained by irvsp for Bismuth.
“(p)” indicates the degeneracy of the bands, while “[q]” indicates the total number of the computed bands at the k-point.
HSK six valence bands GM GM8 (2); GM8 (2); GM4 GM5 (2); [6] T T9 (2); T8 (2); T6 T7 (2); [6] F F3 F4 (2); F5 F6 (2); F5 F6 (2); [6] L L3 L4 (2); L5 L6 (2); L5 L6 (2); [6]  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  Journal Pre-proof Journal Pre-proof11 FIG. 8: A complete list of the EBRs of space group 166 in the presence of SOC.
Each EBR is deﬁned by a Maximal Wyckoﬀsite (nx) and an IR of its site-symmetry group, which are indicated by the ﬁrst and second rows, respectively.
Then, the following rows present the IRs at the Maximal HSK points.
EBRs of SG 166 are obtained, as shown in Fig. 8.
As there are only six valence bands, we can ﬁnd that they are not belonging to any EBR induced from the 9d or 9e Wyckoﬀposition.
In the EBRs induced from the 3a and 3b Wyckoﬀ positions, we can ﬁnd that the number of the pairs of F5F6 at F has to be the same as the total number of the IRs GM9 and GM6GM7 at Γ. In Bismuth, the obtained IRs have three IRs of F5F6, but neither GM9 nor GM6GM7.
Therefore, the occupied bands of Bisumth can not be expressed as any sum of EBRs in SG 166.
In other words, it has to be topological [7]. VII.
CONCLUSIONS In summary, we present an open-source software package – irvsp – that determines the IRs of electronics states in the VASP.
It is very user-friendly and is written in Fortran 90/77, showing a powerful function to analyze the IRs for all the k-points in all 230 SGs, including nonsymmorphic crystals.
The associated library – irrep bcs.a – can be interfaced with other DFT packages.
We show how to use it to identify IRs and further get the topological property for a new material.
As an example, we explore a topological material PdSb2, whose topology is very sensitive to the lattice parameter.
Under tiny strains, it is identiﬁed as a four-fold Dirac nodal-line metal.
Acknowledgments We thank Dr. Peter Blaha and Dr. Luis Elcoro for sharing the character tables of 32 point groups implemented in the WIEN2k package and the character tables of 230 SGs for all k-points on the BCS.
This work was supported by the National Nature Science Foundation of China (Grant No. 11974395), the Strategic Priority Research Program of Chinese Academy of Sciences (Grant No. XDB33000000), and the CAS Pioneer Hundred Talents Program.
Q. S. W. acknowledges the support of NCCR MARVEL.
1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  Journal Pre-proof Journal Pre-proof12 APPENDIX 1.
tbbox.in for Bi2Se3 case = soc !
lda or soc proj: orbt = 2 ntau = 5 0.39900000 0.39900000 0.39900000 1 3 !
x1, x2, x3, itau, iorbit 0.60100000 0.60100000 0.60100000 1 3 0.20600000 0.20600000 0.20600000 2 3 0.79400000 0.79400000 0.79400000 2 3 0.00000000 0.00000000 0.00000000 2 3 end projections kpoint: kmesh = 10 Nk = 4 0.00000000 0.00000000 0.00000000 !
k1: y1,y2,y3 0.50000000 0.50000000 0.50000000 !
k2 0.50000000 0.50000000 0.00000000 !
k3 0.00000000 0.50000000 0.00000000 !
k4 end kpoint path unit cell: 1.194537707 -2.069000000 9.546666657 0.139523990 -0.241662639 0.034916201 1.194537707 2.069000000 9.546666657 0.139523990 0.241662639 0.034916201 -2.389075414 0.000000000 9.546666657 -0.279047979 0.000000000 0.034916201 1 1.000000 0.000000 1.000000 0.000000 0.000000 0.000000 0.000000 0.000000 2 -1.000000 0.000000 1.000000 0.000000 0.000000 0.000000 0.000000 0.000000 3 1.000000 180.000000 0.866025 0.500000 0.000000 0.000000 0.000000 0.000000 4 -1.000000 180.000000 0.866025 0.500000 0.000000 0.000000 0.000000 0.000000 5 1.000000 120.000000 0.000000 0.000000 -1.000000 0.000000 0.000000 0.000000 6 -1.000000 120.000000 0.000000 0.000000 -1.000000 0.000000 0.000000 0.000000 7 1.000000 179.999999 0.000000 1.000000 0.000000 0.000000 0.000000 0.000000 8 -1.000000 179.999999 0.000000 1.000000 0.000000 0.000000 0.000000 0.000000 9 1.000000 120.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 10 -1.000000 120.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 11 1.000000 180.000000 0.866025 -0.500000 0.000000 0.000000 0.000000 0.000000 12 -1.000000 180.000000 0.866025 -0.500000 0.000000 0.000000 0.000000 0.000000 end unit cell TABLE S1: Besides the src irvsp v2.tar.gz code mainly discussed in the main text, there are more codes developed, which are available in the repository: https://github.com/zjwang11/irvsp/. Diﬀerent versions of the codes are developed based on the diﬀerent types of the WFs and conventions of the CRTs.
WFs CRTs PNG BCS PW basis src irvsp v1.tar.gz src irvsp v2.tar.gz TB basis src ir2tb v1.tar.gz src ir2tb v2.tar.gz  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47 48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  Journal Pre-proof Journal Pre-proof13 2.
The brief description of ir2tb Based on the diﬀerent types of the WFs and conventions of the CRTs, diﬀerent versions of the codes are developed, as shown in Table S1.
The program ir2tb is based on the TB WFs.
BLAS and LAPACK linear algebra libraries are needed to diagonalize the TB Hamiltonian.
To compile ir2tb, one needs to copy the library irrep bcs.a to the folder src ir2tb v2 and type the following command: $ make The program ir2tb needs two input ﬁles: tbbox.in and case hr.dat.
The case hr.dat ﬁle, containing the TB parameters in Wannier90 format [46], may be generated by the software Wannier90 [47] with symmetrization [50], or generated by users with a toy TB model, or generated from Slater-Koster method [51] or a discretization of k · p model onto a lattice [52].
The tbbox.in ﬁle provides detailed information about the TB Hamiltonian (i.e., the case hr.dat ﬁle), which is summarized in Table S2.
It is an essential input for the program ir2tb.
The tag case = lda (case = soc) indicates that the TB Hamiltonian does not (does) have the SOC eﬀect.
The lda/soc hr.dat is needed accordingly.
In the proj block, orbt = 1 or 2 indicates the convention of the local orbital ordering on each atom.
The local orbitals in convention 1 are listed in Table S3, while those in convention 2 are in the order as implemented in Wannier90. ntau indicates the total number of the atoms in the TB Hamiltonian, which also means how many lines follow in this block.
The local orbitals of the TB Hamiltonian are provided by : x1,x2,x3, itau, iorbit.
x1,x2,x3 stand for the positions of atoms: τi = (x1t1, x2t2, x3t3); itau stand for the kinds of atoms; and iorbit stand for the total numbers of local orbitals on diﬀerent atoms.
So far, iorbit is limited to the values of {1,3,5,4,6,7,8,9}, whose detailed orbital informations are provided in Table S3.
In the case of case = soc, the local orbitals will be doubled automatically: the ﬁrst half are spin-up and the second half are spin-down.
In the kpoint block, the k-path is given as k1 – k2 – . . .
– kN with kmesh points on each segment.
The unit cell block gives the lattice vectors and reciprocal lattice vectors in ﬁrst three lines, followed by space group operators, which are the same lines as irvsp reads in OUTCAR ﬁle.
TABLE S2: A brief summary of tbbox.in.
Comments Descriptions !
lda or soc lda: nspin=1 (without SOC); soc: nspin=2 (with SOC) !
x1,x2,x3,itau,iorbit deﬁning τi = (x1t1, x2t2, x3t3), iorbit ∈{1, 3, 4, 5, 6, 7, 8, 9} !
k1: y1,y2,y3 deﬁning k1 = (y1g1, y2g2, y3g3); kpath is along k1−k2−· · ·−kN. !
b1x b1y b1z; g1x g1y g1z deﬁning t1 = (b1xˆx, b1y ˆy, b1zˆz); g1 = 2π(g1xˆx, g1y ˆy, g1zˆz) !
SN,Det,omega,nx,ny,nz,v1,v2,v3 deﬁning Os = {Rs|vs} with Rs = Det · e−iω(⃗n·⃗L) and vs = (v1t1, v2t2, v3t3).
SN stands for the sequential number.
TABLE S3: The local orbitals in convention 1 (i.e., orbt = 1) are given below.
The vector ⃗L is given in Eq. (12) in the main text, while the vectors ⃗P and ⃗F are given in Eqs.
(19–22) in Appendix 2. iorbit local orbitals D-matrices in Eq. (7) 1 s D1 = 1 3 px, py, pz D3 = Det · e−iω(⃗n·⃗L) 5 dxy, dyz, dzx, dx2−y2, d3z2−r2 D5 = e−iω(⃗n· ⃗ P ) 4 s, px, py, pz D4 = D1 ⊕D3 6 s, dxy, dyz, dzx, dx2−y2, d3z2−r2 D6 = D1 ⊕D5 8 px, py, pz, dxy, dyz, dzx, dx2−y2, d3z2−r2 D8 = D3 ⊕D5 9 s, px, py, pz, dxy, dyz, dzx, dx2−y2, d3z2−r2 D9 = D1 ⊕D3 ⊕D5 7 fxyz, f5x3−xr2, f5y3−yr2, f5z3−zr2, fx(y2−z2), fy(z2−r2), fz(x2−y2) D7 = Det · e−iω(⃗n· ⃗ F ) Px =       0 0 −i 0 0 0 0 0 −i −i √ 3 i 0 0 0 0 0 i 0 0 0 0 i √ 3 0 0 0       ; Py =       0 i 0 0 0 −i 0 0 0 0 0 0 0 −i i √ 3 0 0 i 0 0 0 0 −i √ 3 0 0       ; Pz =      0 0 0 2i 0 0 0 i 0 0 0 −i 0 0 0 −2i 0 0 0 0 0 0 0 0 0      (19)  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  Journal Pre-proof Journal Pre-proof14 Fx =            0 0 0 0 2i 0 0 0 0 0 0 0 0 0 0 0 0 3i 2 0 0 i √ 15 2 0 0 −3i 2 0 0 i √ 15 2 0 −2i 0 0 0 0 0 0 0 0 0 −i √ 15 2 0 0 −i 2 0 0 −i √ 15 2 0 0 i 2 0            (20) Fy =            0 0 0 0 0 2i 0 0 0 0 −3i 2 0 0 i √ 15 2 0 0 0 0 0 0 0 0 3i 2 0 0 i √ 15 2 0 0 0 0 0 −i √ 15 2 0 0 i 2 −2i 0 0 0 0 0 0 0 −i √ 15 2 0 0 −i 2 0 0            (21) Fz =            0 0 0 0 0 0 2i 0 0 3i 2 0 0 i √ 15 2 0 0 −3i 2 0 0 i √ 15 2 0 0 0 0 0 0 0 0 0 0 0 −i √ 15 2 0 0 −i 2 0 0 −i √ 15 2 0 0 i 2 0 0 −2i 0 0 0 0 0 0            (22) 3.
The standard settings for POSCAR and maximal HSK points The standard (default) settings of POSCAR are listed as follows: a) unique axis b (cell choice 1) for SGs within the monoclinic system.
b) obverse triple hexagonal unit cell for R SGs.
c) the origin choice two - inversion center at (0,0,0) - for the centrosymmetric SGs.
Before one is actually doing the VASP calculations, we strongly suggest that one could run the phonopy program to get the space group number and standardise the POSCAR with the following command: $ phonopy --tolerance 0.01 --symmetry -c POSCAR $ cp PPOSCAR POSCAR The maximal HSK points from the BCS are given in the conventional reciprocal lattice vectors, while the lattice vectors in VASP usually are given in the primitive cell.
The transformation depends on the type of the lattice.
There are only seven diﬀerent types of lattices, i.e. P, C, B, A, R, F and I.
In the X type, the primitive lattices (⃗p1, ⃗p2, ⃗p3) are deﬁned by a transformation matrix MX.
  ⃗p1 ⃗p2 ⃗p3  =   ⃗c1 ⃗c2 ⃗c3  · MX (23) where ⃗c1, ⃗c2 and ⃗c3 are the standard conventional lattices.
In the program, all the matrices MX are given as follows: MP =   1 0 0 0 1 0 0 0 1  ; MC =   0.5 0.5 0 −0.5 0.5 0 0 0 1  ; MB =   0.5 0 −0.5 0 1 0 0.5 0 0.5  ; MA =   1 0 0 0 0.5 −0.5 0 0.5 0.5  ; MR =   2/3 −1/3 −1/3 1/3 1/3 −2/3 1/3 1/3 1/3  ; MF =   0 0.5 0.5 0.5 0 0.5 0.5 0.5 0  ; MI =   −0.5 0.5 0.5 0.5 −0.5 0.5 0.5 0.5 −0.5  .  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  Journal Pre-proof Journal Pre-proof15 4.
The character tables for R-little group and S-little group Figs. S1 and S2 show the character tables for R-little group and S-little group, respectively.
At the k-point [(u, v, w) given in the conventional reciprocal basis], the block x + iy a b c in Fig. S2 corresponds to a complex value of (x + iy) · exp[iπ(au + bv + cw)]. FIG.
S1: The CRT of R-little group in the BCS convention. FIG.
S2: The CRT of S-little group in the BCS convention.
1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  Journal Pre-proof Journal Pre-proof16 5.
Other versions of irvsp Four versions of irvsp are implemented, as shown in Table S4.
Version I works similarly as irrep in the WIEN2k package and presents the IRs with PNG symmetries.
This version can thus not classify the special k-points on the boundary of the Brillouin zone of nonsymmorphic crystals, that is, when exp[−ik(Rsvt + vs)] ̸= 1 for some Os and Ot in LG(k).
Version II works for those k-points for nonsymmorphic SGs, where version I doesn’t work.
Version III combines version I and II.
In the (default) version IV, it works for all the k-points and all 230 SGs in the convention of the BCS notaion.
One can use an optional ﬂag -v to execute other versions of irvsp.
$ irvsp -sg $sgn [-v $nv] [-nb $m $n] > outir & TABLE S4: Four versions of irvsp are implemented.
The ﬁrst column indicates the version number, the second column shows the convention of reference CRTs, and the brief description is followed in the last column.
Version CRTs Brief description version I PNG It resembles an analogue of the program irrep in the WIEN2k package.
version II BCS It works only for the k-points, where version I does not work.
version III PNG&BCS It combines version I and version II.
version IV (default) BCS It works for all the k-points and all 230 SGs, including nonsymmorphic SGs.
All the IRs are labeled in the con- vention of the BCS notation. 6.
The library – irrep bcs.a The library irrep bcs.a is developed to be interfaced with other DFT packages.
Calling the main subroutine irrep bcs can output the IRs labeled in the convention of BCS notation.
The program ir2tb is an example of calling the library mode.
In other words, ir2tb has to be compiled by linking to the library irrep bcs.a.
The source ﬁles of the library irrep bcs.a are released in the public archive: https://github.com/zjwang11/irvsp/ blob/master/lib_irrep_bcs.tar.gz To compile the library, one should ﬁrst uncompress the archive lib irrep bcs.tar.gz, then move into the folder lib irrep bcs and type the following command: $ ./ configure.sh $ source ~/. bashrc $ make lib The ﬁrst two commands add an environment variable IRVSPDATA and the third command create the library irrep bcs.a in the current folder.
There are three main subroutines: irrep bcs, pw setup, tb setup in the library.
Their headers and detailed descriptions are given below (dp = 8).
subroutine irrep_bcs(sgn , num_sym , & rot_input , tau_input , SO3_input , SU2_input , & KKK , WK , kphase , & num_bands , m, n, ene_bands , & spinor , dim_basis , num_basis , & coeffa , coeffb , & Gphase_pw , rot_vec_pw , rot_mat_tb) • integer, intent(in) :: sgn The space group number.
• integer, intent(in) :: num sym The number of space-group operations Os ≡{Rs|vs} (module the integer lattice translations).
1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  Journal Pre-proof Journal Pre-proof17 • integer, dimension(3,3,num sym), intent(in) : : rot input The rotation part Rs of space-group operations Os with respect to primitive lattice vectors [i.e., the matrix Z in Eq. (17)].
• real(dp), dimension(3,num sym), intent(in) :: tau input The translation part vs of space-group operations Os with respect to primitive lattice vectors.
• real(dp), dimension(3,3,num sym), intent(in) :: SO3 input The Rs given in Cartesian coordinates [i.e., R(ω,⃗n) in Eq. (12)].
• complex(dp), dimension(2,2,num sym), intent(in) :: SU2 input The Rs given in spin-1/2 space [i.e., S(ω,⃗n) in Eq. (13)].
• integer, intent(in) :: KKK The sequential number of the given k-point.
• real(dp), dimension(3), intent(in) :: WK The coordinates of the k-point with respect to primitive reciprocal lattice vectors.
• complex(dp), dimension(num sym), intent(in) :: kphase The k-dependent phase factors due to the translation part vs [i.e., e−ik·vs in Eq. (4) or e−i(Rsk·vs) in Eq. (9)].
• integer, intent(in) :: num bands The total number of bands.
• integer, intent(in) :: m, n The IRs of the set of bands [m, n] are computed.
• real(dp), dimension(num bands), intent(in) :: ene band The energy of the bands at the k-point.
• logical, intent(in) :: spinor Set to .true.
if underlying electronic structure calculation has been performed with spinor wavefunctions.
• integer, intent(in) :: dim basis The reserved number of the PW/TB basis.
If rot vec pw is given, dim basis >= num basis for any k-point.
If rot mat tb is given, one should set dim basis = num basis.
• integer, intent(in) :: num basis The number of PW or orthogonal TB basis for the given k-point (note: the number of PWs for diﬀerent k-points are usually diﬀerent).
• complex(dp), dimension(dim basis,num bands),intent(in) :: coeffa The coeﬃcients of spin-up part of wave functions at the given k-point (note: only coeffup basis(1:num basis, 1:num bands) is nonzero).
• complex(dp), dimension(dim basis,num bands),intent(in) :: coeffb The coeﬃcients of spin-down part of wave functions at the given k-point if spinor is .true.
(note: only coeffdn basis(1:num basis, 1:num bands) is nonzero).
• complex(dp), dimension(dim basis,num bands),intent(in), optional :: Gphase pw The phase factors dependent on the PW vectors [i.e., e−iGj′·vs in Eq. (4)].
• integer(dp), dimension(dim basis,num bands),intent(in), optional :: rot vec pw The transformation vectors of space-group operations Os, which send the jth PW to the j′th PW [i.e., Gj′ ≡ Rs(k + Gj) −k in Eq. (4)].
• integer(dp), dimension(dim basis,dim basis,num bands),intent(in), optional :: rot mat tb The transformation matrices of space-group operations Os in the orthogonal TB basis [i.e., V (Rsk −k)D in Eq. (9)].
1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  Journal Pre-proof Journal Pre-proof18 subroutine pw_setup(WK , lattice , & num_sym , det , angle , axis , tau , & dim_basis , num_basis , Gvec , & rot , SO3 , SU2 , & kphase , Gphase_pw , rot_vec_pw) • real(dp), dimension(3), intent(in) :: WK The coordinates of the k-point with respect to primitive reciprocal lattice vectors.
• real(dp), dimension(3,3), intent(in) :: lattice(3,3) The primitive lattice vectors in Cartesian coordinates [i.e., (t1, t2, t3) in Eq. (14)].
• integer, intent(in) :: num sym The number of space-group operations Os ≡{Rs|vs} (module the integer lattice translations).
• real(dp), dimension(num sym), intent(in) :: det The determination of the rotation part Rs of space-group operations Os [i.e., Det in Eq. (12)].
• real(dp), dimension(num sym), intent(in) :: angle The rotation angle of space-group operations Os [i.e., ω in Eq. (12)].
• real(dp), dimension(3,num sym), intent(in) :: axis The rotation axis of space-group operations Os in Cartesain coordinates[i.e., ⃗n in Eq. (12)].
• real(dp), dimension(3,num sym), intent(in) :: tau The translation part vs of space-group operations Os with respect to primitive lattice vectors.
• integer, intent(in) :: dim basis The reserved number of the PW basis (dim basis >= num basis).
• integer, intent(in) :: num basis The number of the PWs for the given k-point (note: num basis for diﬀerent k-points are usually diﬀerent).
• integer, dimension(3, dim basis), intent(in) :: Gvec The plane-wave G-vector with respect to reciprocal lattice vectors [i.e., Gj in Eq. (3)].
• integer, dimension(3,3,num sym), intent(out) :: rot The rotation part Rs of Os with respect to primitive lattice vectors [i.e., the matrix Z in Eq. (17)].
• real(dp), dimension(3,3,num sym), intent(out) :: SO3 The Rs given in Cartesian coordinates [i.e., R(ω,⃗n) in Eq. (12)].
• complex(dp), dimension(2,2,num sym), intent(out) :: SU2 The Rs given in spin-1/2 space [i.e., S(ω,⃗n) in Eq. (13)].
• complex(dp), dimension(num sym), intent(out) :: kphase The k-dependent phase factors due to the translation part vs [i.e., e−ik·vs in Eq. (4)].
• complex(dp), dimension(dim basis,num bands), intent(out) :: Gphase pw The phase factors dependent on the PW vectors [i.e., e−iGj′·vs in Eq. (4)].
• integer(dp), dimension(dim basis,num bands), intent(out) :: rot vec pw The transformation vectors of Rs, which send the jth PW to the j′th PW [i.e., Gj′ ≡Rs(k+Gj)−k in Eq. (4)].
1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  Journal Pre-proof Journal Pre-proof19 subroutine tb_setup(WK , lattice , & num_sym , det , angle , axis , tau , & num_atom , atom_position , & dim_basis , num_basis , angularmom , orbt , & rot , SO3 , SU2 , & kphase , rot_mat_tb) • real(dp), dimension(3), intent(in) :: WK The coordinates of the k-point with respect to primitive reciprocal lattice vectors.
• real(dp), dimension(3,3), intent(in) :: lattice(3,3) The primitive lattice vectors in Cartesian coordinates [i.e., (t1, t2, t3) in Eq. (14)].
• integer, intent(in) :: num sym The number of space-group operations Os ≡{Rs|vs} (module the integer lattice translations).
• real(dp), dimension(num sym), intent(in) :: det The determination of the rotation part Rs of space-group operations Os [i.e., Det in Eq. (12)].
• real(dp), dimension(num sym), intent(in) :: angle The rotation angle of space-group operations Os [i.e., ω in Eq. (12)].
• real(dp), dimension(3,num sym), intent(in) :: axis The rotation axis of space-group operations Os in Cartesain coordinates [i.e., ⃗n in Eq. (12)].
• real(dp), dimension(3,num sym), intent(in) :: tau The translation part vs of space-group operations Os with respect to primitive lattice vectors.
• integer, intent(in) :: num atom The number of atoms in the TB Hamiltonian.
• real(dp), dimension(3, num atom), intent(in) :: atom position The coordinates of atoms with respect to primitive lattice vectors [i.e., τµ in Eq. (6)].
• integer, intent(in) :: dim basis The reserved number of the TB basis (dim basis = num basis).
• integer, intent(in) :: num basis The number of orthogonal local orbitals for the k-point.
• integer, dimensiont(num atom), intent(in) :: angularmom The local orbital information on each atom.
Detailed explainations can be found in Table S3.
• integer, intent(in) :: orbt The convention of the local obitals on each atom.
If orbt = 1, local orbitals are in the order of Table S3.
If orbt = 2, local orbitals are in the order as implemented in Wannier90 • integer, dimension(3,3,num sym), intent(out) :: rot The rotation part Rs of Os with respect to primitive lattice vectors [i.e., the matrix Z in Eq. (17)].
• real(dp), dimension(3,3,num sym), intent(out) :: SO3 The Rs given in Cartesian coordinates [i.e., R(ω,⃗n) in Eq. (12)].
• complex(dp), dimension(2,2,num sym), intent(out) :: SU2 The Rs given in spin-1/2 space [i.e., S(ω,⃗n) in Eq. (13)].
• complex(dp), dimension(num sym), intent(out) :: kphase The k-dependent phase factors due to the translation part vs [i.e., e−i(Rsk·vs) in Eq. (9)].
• integer(dp), dimension(dim basis,dim basis,num bands), intent(out) :: rot mat tb The transformation matrices of Rs in the orthogonal TB basis [i.e., V (Rsk −k)D in Eq. (9)].
1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  Journal Pre-proof Journal Pre-proof20 [1] B. A. Bernevig, T. L. Hughes, and S.-C. Zhang, Science 314, 1757 (2006).
[2] M. K¨onig, S. Wiedmann, C. Br¨une, A. Roth, H. Buhmann, L. W. Molenkamp, X.-L. Qi, and S.-C. Zhang, Science 318, 766 (2007).
[3] C. L. Kane and E. J. Mele, Physical review letters 95, 226801 (2005).
[4] B. A. Bernevig and S.-C. Zhang, Physical review letters 96, 106802 (2006).
[5] C. Kane and M. Hasan, Rev. Mod.
Phys 82, 3045 (2010).
[6] X.-L. Qi and S.-C. Zhang, Reviews of Modern Physics 83, 1057 (2011).
[7] F. Schindler, A. M. Cook, M. G. Vergniory, Z. Wang, S. S. Parkin, B. A. Bernevig, and T. Neupert, Science advances 4, eaat0346 (2018).
[8] X. Wan, A. M. Turner, A. Vishwanath, and S. Y. Savrasov, Physical Review B 83, 205101 (2011).
[9] B. J. Wieder, B. Bradlyn, Z. Wang, J. Cano, Y. Kim, H.-S. D. Kim, A. M. Rappe, C. Kane, and B. A. Bernevig, Science 361, 246 (2018).
[10] F. Tang, H. C. Po, A. Vishwanath, and X. Wan, Nature 566, 486 (2019).
[11] T. Zhang, Y. Jiang, Z. Song, H. Huang, Y. He, Z. Fang, H. Weng, and C. Fang, Nature 566, 475 (2019).
[12] M. Vergniory, L. Elcoro, C. Felser, N. Regnault, B. A. Bernevig, and Z. Wang, Nature 566, 480 (2019).
[13] Y. Xu, Z. Song, Z. Wang, H. Weng, and X. Dai, Phys. Rev. Lett.
122, 256402 (2019), URL https://link.aps.org/doi/ 10.1103/PhysRevLett.122.256402.
[14] G. Li, B. Yan, Z. Wang, and K. Held, Phys.
Rev. B 95, 035102 (2017), URL https://link.aps.org/doi/10.1103/ PhysRevB.95.035102.
[15] S. Nie, L. Xing, R. Jin, W. Xie, Z. Wang, and F. B. Prinz, Phys.
Rev. B 98, 125143 (2018), URL https://link.aps.org/ doi/10.1103/PhysRevB.98.125143.
[16] Y. Qian, S. Nie, C. Yi, L. Kong, C. Fang, T. Qian, H. Ding, Y. Shi, Z. Wang, H. Weng, et al., npj Computational Materials 5, 121 (2019), URL https://doi.org/10.1038/s41524-019-0260-6.
[17] H. Zhang, C.-X. Liu, X.-L. Qi, X. Dai, Z. Fang, and S.-C. Zhang, Nature physics 5, 438 (2009).
[18] Y. Xia, D. Qian, D. Hsieh, L. Wray, A. Pal, H. Lin, A. Bansil, D. Grauer, Y. S. Hor, R. J. Cava, et al., Nature physics 5, 398 (2009).
[19] Y. Chen, J. G. Analytis, J.-H. Chu, Z. Liu, S.-K. Mo, X.-L. Qi, H. Zhang, D. Lu, X. Dai, Z. Fang, et al., science 325, 178 (2009).
[20] Z. Wang, Y. Sun, X.-Q. Chen, C. Franchini, G. Xu, H. Weng, X. Dai, and Z. Fang, Physical Review B 85, 195320 (2012).
[21] Z. Liu, B. Zhou, Y. Zhang, Z. Wang, H. Weng, D. Prabhakaran, S.-K. Mo, Z. Shen, Z. Fang, X. Dai, et al., Science 343, 864 (2014).
[22] Z. Wang, H. Weng, Q. Wu, X. Dai, and Z. Fang, Phys.
Rev. B 88, 125427 (2013), URL https://link.aps.org/doi/10. 1103/PhysRevB.88.125427.
[23] Z. Liu, J. Jiang, B. Zhou, Z. Wang, Y. Zhang, H. Weng, D. Prabhakaran, S. Mo, H. Peng, P. Dudin, et al., Nature materials 13, 677 (2014).
[24] H. Weng, C. Fang, Z. Fang, B. A. Bernevig, and X. Dai, Physical Review X 5, 011029 (2015).
[25] S.-M. Huang, S.-Y. Xu, I. Belopolski, C.-C. Lee, G. Chang, B. Wang, N. Alidoust, G. Bian, M. Neupane, C. Zhang, et al., Nature communications 6, 7373 (2015).
[26] B. Lv, H. Weng, B. Fu, X. Wang, H. Miao, J. Ma, P. Richard, X. Huang, L. Zhao, G. Chen, et al., Physical Review X 5, 031013 (2015).
[27] S.-Y. Xu, I. Belopolski, N. Alidoust, M. Neupane, G. Bian, C. Zhang, R. Sankar, G. Chang, Z. Yuan, C.-C. Lee, et al., Science 349, 613 (2015).
[28] T. H. Hsieh, H. Lin, J. Liu, W. Duan, A. Bansil, and L. Fu, Nature communications 3, 982 (2012).
[29] Y. Tanaka, Z. Ren, T. Sato, K. Nakayama, S. Souma, T. Takahashi, K. Segawa, and Y. Ando, Nature Physics 8, 800 (2012).
[30] Z. Wang, A. Alexandradinata, R. J. Cava, and B. A. Bernevig, Nature 532, 189 (2016).
[31] J. Ma, C. Yi, B. Lv, Z. Wang, S. Nie, L. Wang, L. Kong, Y. Huang, P. Richard, P. Zhang, et al., Science advances 3, e1602415 (2017).
[32] Z. Zhu, Y. Cheng, and U. Schwingenschl¨ogl, Physical Review B 85, 235401 (2012).
[33] H. C. Po, A. Vishwanath, and H. Watanabe, Nat. Commu.
8, 50 (2017), URL https://www.nature.com/articles/ s41467-017-00133-2.
[34] Z. Song, T. Zhang, Z. Fang, and C. Fang, Nat. Commu.
9, 3530 (2018), URL https://www.nature.com/articles/ s41467-018-06010-w.
[35] J. Kruthoﬀ, J. de Boer, J. van Wezel, C. L. Kane, and R.-J. Slager, Phys.
Rev. X 7, 041069 (2017), URL https: //link.aps.org/doi/10.1103/PhysRevX.7.041069.
[36] B. Bradlyn, L. Elcoro, J. Cano, M. Vergniory, Z. Wang, C. Felser, M. Aroyo, and B. A. Bernevig, Nature 547, 298 (2017), URL https://www.nature.com/articles/nature23268.
[37] J. Cano, B. Bradlyn, Z. Wang, L. Elcoro, M. Vergniory, C. Felser, M. Aroyo, and B. A. Bernevig, Physical Review B 97, 035139 (2018).
[38] M. Vergniory, L. Elcoro, Z. Wang, J. Cano, C. Felser, M. Aroyo, B. A. Bernevig, and B. Bradlyn, Physical Review E 96, 023310 (2017).
1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  Journal Pre-proof Journal Pre-proof21 [39] J. Cano, B. Bradlyn, Z. Wang, L. Elcoro, M. Vergniory, C. Felser, M. Aroyo, and B. A. Bernevig, Physical review letters 120, 266401 (2018).
[40] L. Elcoro, B. Bradlyn, Z. Wang, M. G. Vergniory, J. Cano, C. Felser, B. A. Bernevig, D. Orobengoa, G. Flor, and M. I. Aroyo, Journal of Applied Crystallography 50, 1457 (2017).
[41] M. I. Aroyo, J. Perez-Mato, D. Orobengoa, E. Tasci, G. De La Flor, and A. Kirov, Bulg. Chem.
Commun 43, 183 (2011).
[42] H. T. Stokes, B. J. Campbell, and R. Cordes, Acta Crystallographica Section A: Foundations of Crystallography 69, 388 (2013).
[43] P. Blaha, K. Schwarz, G. K. Madsen, D. Kvasnicka, and J. Luitz, An augmented plane wave+ local orbitals program for calculating crystal properties (2001).
[44] C. Persson, Electronic structure of intrinsic and doped silicon carbide and silicon, PhD thesis, ISBN 91-7219-442-1 (1999).
[45] G. Kresse and J. Furthm¨uller, Phys.
Rev. B 54, 169 (1996).
[46] N. Marzari, A. A. Mostoﬁ, J. R. Yates, I. Souza, and D. Vanderbilt, Rev. Mod. Phys. 84, 1419 (2012), URL https: //link.aps.org/doi/10.1103/RevModPhys.84.1419.
[47] A. A. Mostoﬁ, J. R. Yates, G. Pizzi, Y.-S. Lee, I. Souza, D. Vanderbilt, and N. Marzari, Computer Physics Communications 185, 2309 (2014).
[48] Q. Wu, S. Zhang, H.-F. Song, M. Troyer, and A. A. Soluyanov, Computer Physics Communications 224, 405 (2018), ISSN 0010-4655, URL http://www.sciencedirect.com/science/article/pii/S0010465517303442.
[49] C. Yue, Symmetrization of wannier tight-binding models, https://github.com/quanshengwu/wannier_tools/tree/ master/wannhr_symm.
[50] D. Gresch, Q. Wu, G. W. Winkler, R. H¨auselmann, M. Troyer, and A. A. Soluyanov, Physical Review Materials 2, 103805 (2018).
[51] J. C. Slater and G. F. Koster, Phys.
Rev. 94, 1498 (1954), URL https://link.aps.org/doi/10.1103/PhysRev.94.1498.
[52] M. Willatzen and L. L. Y. Voon, The kp Method-Electronic Properties of Semiconductors, vol.
53 (SpringerBerlinHeidel- berg,Berlin,Heidelberg, 2009).
[53] J. F. Cornwell, Group Theory in Physics [Vol. 1-2].
(Academic Press, 1984).
[54] H.-W. Streitwolf, Group theory in solid-state physics (Macdonald and Co., 1971).
[55] B. Bradlyn, J. Cano, Z. Wang, M. Vergniory, C. Felser, R. J. Cava, and B. A. Bernevig, Science 353, aaf5037 (2016).
[56] R. Chapai, Y. Jia, W. Shelton, R. Nepal, M. Saghayezhian, J. DiTusa, E. Plummer, C. Jin, and R. Jin, Physical Review B 99, 161110 (2019).
[57] J. Pratt, K. Myles, J. Darby Jr, and M. Mueller, Journal of the Less Common Metals 14, 427 (1968).
[58] S. Furuseth, K. Selte, A. Kjekshus, P. Nielsen, B. Sj¨oberg, and E. Larsen, Acta Chem. Scand 19 (1965).
[59] N. E. Brese and H. G. von Schnering, Zeitschrift f¨ur anorganische und allgemeine Chemie 620, 393 (1994).
1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  Journal Pre-proof Journal Pre-proofRevised version of Program summary Program summary Program title: irvsp CPC Library link to program ﬁles: https://dx.doi.org/10.17632/y9ds5nnm2f.1 Licensing provisions: GNU Lesser General Public License Programming language: Fortran 90/77 Nature of problem: Determining irreducible representations for all energy bands and all the k-points in 230 space groups.
It is in particular useful to analyze energy bands, their connectivities, and band topology.
Solution method: By computing the traces of matrix presentations of space group operators for the eigen-wavefunctions at a certain k-point in a given space group, one can determine irreducible representations for them.
1 Journal Pre-proof Journal Pre-proofDeclaration of interests ☒ The authors declare that they have no known competing financial interests or personal relationships  that could have appeared to influence the work reported in this paper.
☐The authors declare the following financial interests/personal relationships which may be considered  as potential competing interests:  Journal Pre-proof Journal Pre-proof